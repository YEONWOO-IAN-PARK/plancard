plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.ly.smart-doc" version "3.0.8"
}

group = 'com.junebay'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    maven { url = uri("https://plugins.gradle.org/m2/") }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
//    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
//    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'

    // Webpack
    implementation 'org.sejda.imageio:webp-imageio:0.1.6'

    // MySQL 8.x
    implementation 'com.mysql:mysql-connector-j:8.2.0'

    // JDBC Spy Logger
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    // Mybatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

    // Smart-Doc (Rest Api Documentation)
    implementation 'com.ly.smart-doc:smart-doc-gradle-plugin:3.0.8'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

smartdoc {
    configFile = file("src/main/resources/smart-doc.json")

    exclude 'org.springframework.boot:spring-boot-starter-tomcat'
}

tasks.named('test') {
    useJUnitPlatform()
}
