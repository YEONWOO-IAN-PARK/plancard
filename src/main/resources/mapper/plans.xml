<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.junebay.plancard.plan.mapper.PlanMapper">

	<!-- 내 플랜 반환을 위한 ResultMap -->
	<resultMap id="myPlanDTOResultMap" type="com.junebay.plancard.plan.dto.PlanDTO">
		<id property="planId" column="plan_id" />
		<result property="title" column="title"/>
		<result property="startDate" column="start_date"/>
		<result property="endDate" column="end_date"/>
		<result property="duration" column="duration"/>
		<result property="visibility" column="visibility"/>
		<result property="likeCount" column="like_count"/>
		<result property="like" column="like"/>
		<result property="scrap" column="scrap"/>
		<result property="author" column="author"/>
		<result property="createdDate" column="createdDate"/>
		<result property="lastUpdateDate" column="lastUpdateDate"/>
		<!-- TODO : 찬이한테 plan-list 조회 결과에 tagList 뭔지 물어봐야됨.(화면상에는 안보임) -->
<!--		<collection property="tagList" ofType="com.junebay.plancard.common.vo.Tag" column="card_id" javaType="ArrayList" select="selectTagsByMyCardId" />-->
		<collection property="thumbnailCardList" ofType="com.junebay.plancard.card.dto.ThumbnailCardDTO" column="plan_id" javaType="ArrayList" select="selectThumbnailCardListByPlanId" />
	</resultMap>

	<sql id="searchCondition">
		/* 검색 */
		<if test="searchDTO.search != null and searchDTO.search != ''">
			AND (
			    p.title LIKE CONCAT('%', #{searchDTO.search}, '%')
			)
		</if>
	</sql>

	<sql id="filterCondition">
		/* 필터: 스크랩 여부 */
		<if test="searchDTO.filter != null and searchDTO.filter.scrap != null">
		<choose>
			<when test="searchDTO.filter.scrap == true">
				AND ps.plan_id IS NOT NULL
			</when>
			<otherwise>
				AND ps.plan_id IS NULL
			</otherwise>
		</choose>
		</if>
	</sql>

	<insert id="insertMyPlan" useGeneratedKeys="true" keyProperty="planDTO.planId">
		INSERT INTO plans (title, start_date, end_date, user_id, author_id)
		VALUES (#{planDTO.title}, #{planDTO.startDate}, #{planDTO.endDate}, #{userId}, #{userId})
	</insert>

	<insert id="insertPlanDay" useGeneratedKeys="true" keyProperty="planDayDTO.planDayId">
		INSERT INTO plan_days (plan_id, title, travel_date, author_id)
		VALUES (#{planId}, #{planDayDTO.title}, #{planDayDTO.travelDate}, #{userId})
	</insert>

	<insert id="insertPlanDayCards">
		INSERT INTO plan_day_cards (plan_day_id, seq, card_id)
		VALUES
		<foreach collection="planDayDTO.planDayCardList" index="idx" item="card" separator=",">
			(#{planDayDTO.planDayId}, ${idx} + 1, #{card})
		</foreach>
	</insert>

	<insert id="insertPlanDayBridges">
		INSERT INTO plan_day_bridges (plan_day_id, seq, memo)
		VALUES
		<foreach collection="planDayDTO.planDayBridgeList" index="idx" item="bridge" separator=",">
			(#{planDayDTO.planDayId}, ${idx} + 1, #{bridge.memo})
		</foreach>
	</insert>

	<select id="selectPlanOne" resultType="com.junebay.plancard.plan.dto.BasicPlanDTO">
		SELECT	id AS planId
				, title
				, start_date
				, end_date
		     	/* MyBatis의 조회값 세팅 기준은 자바빈에서 설정한 Setter가 아니라 조회값을 주입하는 형식이기 때문에 여기서 계산해서 넣어주어야함 */
				, DATEDIFF(end_date, start_date) + 1 AS duration
		FROM	plans p
		WHERE	id = #{planId}
	</select>

	<select id="selectAllMyPlanCount" resultType="java.lang.Integer">
		SELECT	COUNT(*)
		FROM	(
			SELECT	p.id AS plan_id
					, p.visibility
			        , p.title
			        , p.like_count
			        , CASE WHEN ps.plan_id IS NULL THEN false ELSE true END AS scrap
			        -- , CASE WHEN pl.plan_id IS NULL THEN false ELSE true END AS like
			        , p.author_id
			        , p.created_date
			        , p.updated_date as lastUpdateDate
			        , DATEDIFF(end_date, start_date) + 1 AS duration
			FROM 	plans p
					LEFT OUTER JOIN plan_scraps ps
						ON p.id = ps.plan_id AND ps.user_id = #{userId}
					-- LEFT OUTER JOIN plan_like pl ON p.id = pl.plan_id
			WHERE	p.user_id = #{userId}
					<include refid="searchCondition" />
					<include refid="filterCondition" />
		) Z
	</select>

	<select id="selectMyPlanList" resultMap="myPlanDTOResultMap">
		SELECT	p.id AS plan_id
				, p.visibility
		        , p.title
		        , p.like_count
		        , CASE WHEN ps.plan_id IS NULL THEN false ELSE true END AS scrap
		        -- , CASE WHEN pl.plan_id IS NULL THEN false ELSE true END AS like
		        , p.author_id
		        , p.created_date
		        , p.updated_date as lastUpdateDate
		        , DATEDIFF(end_date, start_date) + 1 AS duration
		FROM 	plans p
				LEFT OUTER JOIN plan_scraps ps
					ON p.id = ps.plan_id AND ps.user_id = #{userId}
				-- LEFT OUTER JOIN plan_like pl ON p.id = pl.plan_id
		WHERE	p.user_id = #{userId}
				<include refid="searchCondition" />
				<include refid="filterCondition" />
				<include refid="common.sortCondition" />
				<include refid="common.paginationCondition" />
	</select>

	<select id="selectThumbnailCardListByPlanId" resultType="com.junebay.plancard.card.dto.ThumbnailCardDTO">
		SELECT	r.card_id, r.title, r.description, ct.name, co.name, cg.name, r.rating, r.image_url, r.scrap
		FROM (
			SELECT	pdc.card_id
					, c.title
					, c.description
					, c.city_id
					, c.category_id
					, c.rating
					, CONCAT('/images/cards/', c.main_image_id) AS image_url
					, CASE WHEN cs.card_id IS NULL THEN false ELSE true END AS scrap
			FROM	plans p
					INNER JOIN plan_days pd
						ON p.id = pd.plan_id
					INNER JOIN plan_day_cards pdc
						ON pd.id = pdc.plan_day_id
					INNER JOIN cards c
						ON pdc.card_id = c.id AND c.is_active = true
					LEFT OUTER JOIN card_scraps cs
					    ON pdc.card_id = cs.card_id AND cs.user_id = p.user_id
			WHERE	p.id = #{planId}
		) r
		INNER JOIN cities ct
			ON ct.id = r.city_id AND ct.is_active = true
		INNER JOIN countries co
			ON co.id = ct.country_id AND co.is_active = true
		INNER JOIN categories cg
			ON cg.id = r.category_id AND cg.is_active = true
	</select>


</mapper>